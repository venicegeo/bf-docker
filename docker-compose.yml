version: '3'
services:
  javabuild:
    build:
      context: .
      dockerfile: dockerfile/Dockerfile_javabuild
    image: beachfront/javabuild:1.0.0
    volumes:
      - bfjars:/var/lib/beachfront/target
  javaruntime:
    build:
      context: .
      dockerfile: dockerfile/Dockerfile_javaruntime
    image: beachfront/javaruntime:1.0.0
  ui:
    build:
      context: .
      dockerfile: dockerfile/Dockerfile_ui
    image: beachfront/ui:1.0.0
    depends_on:
      - bfapi
    ports:
      - "8080:8080"
    environment:
      - API_ROOT=http://localhost
  tideprediction:
    build:
      context: .
      dockerfile: dockerfile/Dockerfile_tideprediction
    image: beachfront/tideprediction:1.0.0
    expose:
      - "8080"
  iabroker:
    build:
      context: .
      dockerfile: dockerfile/Dockerfile_iabroker
    image: beachfront/iabroker:1.0.0
    depends_on:
      - postgis
    links:
      - postgis
    expose:
      - "8080"
    environment:
      - BF_TIDE_PREDICTION_URL=http://tideprediction:8080/tides
      - PL_API_URL=https://api.planet.com
      - PL_API_KEY
      - PORT=8080
      - LANDSAT_HOST=https://landsat-pds.s3.amazonaws.com
      - LANDSAT_INDEX_SCENES_URL=https://landsat-pds.s3.amazonaws.com/c1/L8/scene_list.gz
      - DATABASE_URL=postgresql://piazza:piazza@postgis:5432/piazza
  ndwi:
    build:
      context: .
      dockerfile: dockerfile/Dockerfile_ndwi
    image: beachfront/ndwi:1.0.0
    depends_on:
      - gateway
    links:
      - gateway
    environment:
      - PZ_ADDR=http://gateway:8080
      - PZ_API_KEY=null
  bfapi:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - postgis
      - geoserver
      - gateway
      - tideprediction
      - iabroker
    links:
      - rabbitmq
      - postgis
      - geoserver
      - gateway
      - tideprediction
      - iabroker
    expose: 
      - "8080"
    ports:
      - "80:8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/bf-api-2.0.0.jar
    environment:
      - spring.profiles.active=basic-geoserver-auth,insecure
      - jwt.enabled=false
      - vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://postgis:5432/piazza
      - vcap.services.pz-postgres.credentials.db_host=postgis
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - vcap.services.pz-geoserver.credentials.boundless_geoserver_url=http://geoserver:8080/geoserver/index.html
      - vcap.services.pz-geoserver.credentials.boundless_geoserver_password=geoserver
      - vcap.services.pz-geoserver.credentials.boundless_geoserver_username=admin
      - liquibase.user=piazza
      - liquibase.password=piazza
      - ia.broker.server=iabroker
      - piazza.server=http://gateway:8080
  access:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - postgis
      - geoserver
    links:
      - rabbitmq
      - postgis
      - geoserver
    expose:
      - "8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/piazza-access-1.0.0.jar
    environment:
      - spring.profiles.active=basic-geoserver-auth
      - vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://postgis:5432/piazza
      - vcap.services.pz-postgres.credentials.db_host=postgis
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - vcap.services.pz-geoserver.credentials.boundless_geoserver_url=http://geoserver:8080/geoserver/index.html
      - vcap.services.pz-geoserver.credentials.boundless_geoserver_password=geoserver
      - vcap.services.pz-geoserver.credentials.boundless_geoserver_username=admin
      - vcap.services.pz-blobstore.credentials.access_key_id=null
      - vcap.services.pz-blobstore.credentials.secret_access_key=null
      - vcap.services.pz-blobstore.credentials.encryption_key=null
      - server.port=8080
  gateway:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - access
      - ingest
      - jobmanager
      - servicecontroller
      - idam
    links:
      - rabbitmq
      - access
      - ingest
      - jobmanager
      - servicecontroller
      - idam
    expose:
      - "8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/piazza-gateway-1.0.0.jar
    environment:
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - vcap.services.pz-blobstore.credentials.access_key_id=null
      - vcap.services.pz-blobstore.credentials.secret_access_key=null
      - vcap.services.pz-blobstore.credentials.encryption_key=null
      - server.port=8080
      - jobmanager.url=http://jobmanager:8080
      - servicecontroller.url=http://servicecontroller:8080
      - ingest.url=http://ingest:8080
      - access.url=http://access:8080
      - security.url=http://idam:8080
  idam:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - postgis
    links:
      - rabbitmq
      - postgis
    expose:
      - "8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/piazza-idam-1.0.0.jar
    environment:
      - spring.profiles.active=disable-authn
      - vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://postgis:5432/piazza
      - vcap.services.pz-postgres.credentials.db_host=postgis
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - server.port=8080
  ingest:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - postgis
      - access
    links:
      - rabbitmq
      - postgis
      - access
    expose:
      - "8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/piazza-ingest-1.0.0.jar
    environment:
      - vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://postgis:5432/piazza
      - vcap.services.pz-postgres.credentials.db_host=postgis
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - vcap.services.pz-blobstore.credentials.access_key_id=null
      - vcap.services.pz-blobstore.credentials.secret_access_key=null
      - vcap.services.pz-blobstore.credentials.encryption_key=null
      - server.port=8080
      - access.url=http://access:8080
  jobmanager:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - postgis
    links:
      - rabbitmq
      - postgis
    expose:
      - "8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/piazza-jobmanager-1.0.0.jar
    environment:
      - vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://postgis:5432/piazza
      - vcap.services.pz-postgres.credentials.db_host=postgis
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - server.port=8080
  servicecontroller:
    image: beachfront/javaruntime:1.0.0
    depends_on:
      - javabuild
      - javaruntime
      - rabbitmq
      - postgis
    links:
      - rabbitmq
      - postgis
    expose:
      - "8080"
    volumes:
      - bfjars:/var/lib/beachfront/target
    entrypoint: /var/lib/beachfront/entrypoint.sh
    command: java -jar target/piazzaServiceController-1.0.0.jar
    environment:
      - vcap.services.pz-postgres.credentials.jdbc_uri=jdbc:postgresql://postgis:5432/piazza
      - vcap.services.pz-postgres.credentials.db_host=postgis
      - vcap.services.pz-rabbitmq.credentials.protocols.amqp.host=rabbitmq
      - server.port=8080
  rabbitmq:
    image: rabbitmq:3.6.6-management
    expose:
      - "5672"
      - "15672"
  postgis:
    image: mdillon/postgis:9.5
    environment:
      - POSTGRES_USER=piazza
      - POSTGRES_PASSWORD=piazza
      - POSTGRES_DB=piazza
    expose:
      - "5432"
  geoserver:
    image: kartoza/geoserver:latest
    depends_on:
      - postgis
    links:
      - postgis
    expose:
      - "8080"
    ports:
      - "8282:8080"
volumes:
  bfjars:
